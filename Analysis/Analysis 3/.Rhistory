options(scipen=999)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
DELHI.TRAIN=as.tibble(read.csv("DailyDelhiClimateTrain.csv"))[-1462,]    #DO NOT CHANGE
DELHI.TEST=as.tibble(read.csv("DailyDelhiClimateTest.csv"))              #DO NOT CHANGE
head(DELHI.TRAIN)                                                        #DO NOT CHANGE
head(DELHI.TEST)                                                         #DO NOT CHANGE
OUT = DELHI.TRAIN %>%                                              #DO NOT CHANGE
separate(date,into=c("Year","Month","Day"),sep="-") %>%          #DO NOT CHANGE
mutate_at(1:3,as.numeric) %>%                                    #DO NOT CHANGE
rename("Temperature"="meantemp","Humidity"="humidity",           #DO NOT CHANGE
"Wind Speed"="wind_speed","Pressure"="meanpressure")      #DO NOT CHANGE
head(OUT) #DO NOT CHANGE
clean.func = function(data){
returnSet <- data %>%
separate(date, into = c("Year", "Month", "Day"), sep = "-") %>%
mutate(across(Year:Day, as.numeric)) %>%
rename("Temperature" = meantemp, "Humidity" = humidity,
"Wind Speed" = wind_speed, "Pressure" = meanpressure
return(COMPLETE)
clean.func = function(data){
returnSet <- data %>%
separate(date, into = c("Year", "Month", "Day"), sep = "-") %>%
mutate(across(Year:Day, as.numeric)) %>%
rename("Temperature" = meantemp, "Humidity" = humidity,
"Wind Speed" = wind_speed, "Pressure" = meanpressure
return(returnSet)
clean.func = function(data){
returnSet <- data %>%
separate(date, into = c("Year", "Month", "Day"), sep = "-") %>%
mutate(across(Year:Day, as.numeric)) %>%
rename("Temperature" = meantemp, "Humidity" = humidity,
"Wind Speed" = wind_speed, "Pressure" = meanpressure)
return(returnSet)
}
TRAIN.CLEAN=clean.func(DELHI.TRAIN) #DO NOT CHANGE
TEST.CLEAN=clean.func(DELHI.TEST) #DO NOT CHANGE
head(TRAIN.CLEAN) #DO NOT CHANGE
head(TEST.CLEAN) #DO NOT CHANGE
clean.func = function(data){
returnSet <- data %>%
separate(date, into = c("Year", "Month", "Day"), sep = "-") %>%
mutate(across(1:3, as.numeric)) %>%
rename("Temperature" = meantemp, "Humidity" = humidity,
"Wind Speed" = wind_speed, "Pressure" = meanpressure)
return(returnSet)
}
TRAIN.CLEAN=clean.func(DELHI.TRAIN) #DO NOT CHANGE
TEST.CLEAN=clean.func(DELHI.TEST) #DO NOT CHANGE
head(TRAIN.CLEAN) #DO NOT CHANGE
head(TEST.CLEAN) #DO NOT CHANGE
month=c(1,2,2,1,2,2,1,2,1,2)  #DO NOT CHANGE
if(month[1]==1){          #DO NOT CHANGE
month[1]="January"          #DO NOT CHANGE
} else if(month[1]==2){       #DO NOT CHANGE
month[1]="February"         #DO NOT CHANGE
}                         #DO NOT CHANGE
if(month[2]==1){          #DO NOT CHANGE
month[2]="January"          #DO NOT CHANGE
} else if(month[2]==2){       #DO NOT CHANGE
month[2]="February"         #DO NOT CHANGE
}                         #DO NOT CHANGE
print(month)                 #DO NOT CHANGE
month.func <- function(month) {
month_names <- c("January", "February", "March", "April", "May", "June",
"July", "August", "September", "October", "November", "December")
for (i in 1:length(month)) {
month[i] <- month_names[month[i]]
}
return(month)
}
TRAIN.CLEAN.2=TRAIN.CLEAN #DO NOT CHANGE
TEST.CLEAN.2=TEST.CLEAN #DO NOT CHANGE
TRAIN.CLEAN.2$Month=month.func(TRAIN.CLEAN$Month) #DO NOT CHANGE
TEST.CLEAN.2$Month=month.func(TEST.CLEAN$Month) #DO NOT CHANGE
unique(TRAIN.CLEAN.2$Month) #DO NOT CHANGE
unique(TEST.CLEAN.2$Month) #DO NOT CHANGE
TRAIN.CLEAN.2
month.func <- function(month) {
month_names <- c("January", "February", "March", "April", "May", "June",
"July", "August", "September", "October", "November", "December")
month = month_names[month]
return(month)
}
TRAIN.CLEAN.2=TRAIN.CLEAN #DO NOT CHANGE
TEST.CLEAN.2=TEST.CLEAN #DO NOT CHANGE
TRAIN.CLEAN.2$Month=month.func(TRAIN.CLEAN$Month) #DO NOT CHANGE
TEST.CLEAN.2$Month=month.func(TEST.CLEAN$Month) #DO NOT CHANGE
unique(TRAIN.CLEAN.2$Month) #DO NOT CHANGE
unique(TEST.CLEAN.2$Month) #DO NOT CHANGE
TRAIN.CLEAN.2
rep(c("Bill","Ted"),times=5)
rep(c("Bill","Ted"),each=2,times=4)
rep(c("Bill","Ted"),length.out=11)
?rep
TRAIN.CLEAN.3$Day = rep(c("Tuesday", "Wednesday", "Thursday", "Friday",
"Saturday", "Sunday", "Monday"),
length.out = nrow(TRAIN.CLEAN.3))
TRAIN.CLEAN.3=TRAIN.CLEAN.2 #DO NOT CHANGE
TEST.CLEAN.3=TEST.CLEAN.2   #DO NOT CHANGE
TRAIN.CLEAN.3$Day = rep(c("Tuesday", "Wednesday", "Thursday", "Friday",
"Saturday", "Sunday", "Monday"),
length.out = nrow(TRAIN.CLEAN.3))
unique(TRAIN.CLEAN.3$Day[c(1,1461)]) #DO NOT CHANGE
TRAIN.CLEAN.3
TRAIN.CLEAN.3=TRAIN.CLEAN.2 #DO NOT CHANGE
TEST.CLEAN.3=TEST.CLEAN.2   #DO NOT CHANGE
TRAIN.CLEAN.3$Day = rep(c("Tuesday", "Wednesday", "Thursday", "Friday",
"Saturday", "Sunday", "Monday"),
length.out = nrow(TRAIN.CLEAN.3))
TEST.CLEAN.3$Day  = rep(c("Tuesday", "Wednesday", "Thursday", "Friday",
"Saturday", "Sunday", "Monday"),
length.out = nrow(TEST.CLEAN.3))
unique(TRAIN.CLEAN.3$Day[c(1,1461)]) #DO NOT CHANGE
unique(TEST.CLEAN.3$Day[c(1,114)]) #DO NOT CHANGE
TRAIN.CLEAN
TRAIN.CLEAN.3=TRAIN.CLEAN.2 #DO NOT CHANGE
TEST.CLEAN.3=TEST.CLEAN.2   #DO NOT CHANGE
TRAIN.CLEAN.3$Day = rep(c("Tuesday", "Wednesday", "Thursday", "Friday",
"Saturday", "Sunday", "Monday"),
length.out = nrow(TRAIN.CLEAN.3))
TEST.CLEAN.3$Day  = rep(c("Tuesday", "Wednesday", "Thursday", "Friday",
"Saturday", "Sunday", "Monday"),
length.out = nrow(TEST.CLEAN.3))
unique(TRAIN.CLEAN.3$Day[c(1,1461)]) #DO NOT CHANGE
unique(TEST.CLEAN.3$Day[c(1,114)]) #DO NOT CHANGE
TRAIN.CLEAN.3
cels.2.fahr = function(tempInCel){
tempInFah = (tempInCel * (9/5)) +32
return(tempInFah)
}
TRAIN.FINAL=TRAIN.CLEAN.3 #DO NOT CHANGE
TEST.FINAL=TEST.CLEAN.3   #DO NOT CHANGE
TRAIN.FINAL$Temperature=cels.2.fahr(TRAIN.CLEAN.3$Temperature) #DO NOT CHANGE
TEST.FINAL$Temperature=cels.2.fahr(TEST.CLEAN.3$Temperature) #DO NOT CHANGE
TRAIN.FINAL$Temperature[1:10] #DO NOT CHANGE
TEST.FINAL$Temperature[1:10] #DO NOT CHANGE
TRAIN.FINAL
MEAN.TEMP.TRAIN=matrix(NA,12,7) #DO NOT CHANGE
rownames(MEAN.TEMP.TRAIN)=c("January","February","March","April","May","June",         #DO NOT CHANGE
"July","August","September","October","November","December")  #DO NOT CHANGE
colnames(MEAN.TEMP.TRAIN)=c("Monday","Tuesday","Wednesday",                            #DO NOT CHANGE
"Thursday","Friday","Saturday","Sunday")                      #DO NOT CHANGE
for(j in 1:12){    #DO NOT CHANGE
for(k in 1:7){   #DO NOT CHANGE
month <- rownames(MEAN.TEMP.TRAIN)[j]
day <- colnames(MEAN.TEMP.TRAIN)[k]
average_temp <- mean(TRAIN.FINAL[TRAIN.FINAL$Month == month & TRAIN.FINAL$Day == day, "Temperature"])
MEAN.TEMP.TRAIN[j, k] <- average_temp
}
}                #DO NOT CHANGE
}                  #DO NOT CHANGE
MEAN.TEMP.TRAIN=matrix(NA,12,7) #DO NOT CHANGE
rownames(MEAN.TEMP.TRAIN)=c("January","February","March","April","May","June",         #DO NOT CHANGE
"July","August","September","October","November","December")  #DO NOT CHANGE
colnames(MEAN.TEMP.TRAIN)=c("Monday","Tuesday","Wednesday",                            #DO NOT CHANGE
"Thursday","Friday","Saturday","Sunday")                      #DO NOT CHANGE
for(j in 1:12){    #DO NOT CHANGE
for(k in 1:7){   #DO NOT CHANGE
month <- rownames(MEAN.TEMP.TRAIN)[j]
day <- colnames(MEAN.TEMP.TRAIN)[k]
average_temp <- mean(TRAIN.FINAL[TRAIN.FINAL$Month == month & TRAIN.FINAL$Day == day, "Temperature"])
MEAN.TEMP.TRAIN[j, k] <- average_temp
}                #DO NOT CHANGE
}                  #DO NOT CHANGE
print(MEAN.TEMP.TRAIN) #DO NOT CHANGE
rownames(MEAN.TEMP.TRAIN)[j]
colnames(MEAN.TEMP.TRAIN)[k]
TRAIN.FINAL
MEAN.TEMP.TRAIN=matrix(NA,12,7) #DO NOT CHANGE
rownames(MEAN.TEMP.TRAIN)=c("January","February","March","April","May","June",         #DO NOT CHANGE
"July","August","September","October","November","December")  #DO NOT CHANGE
colnames(MEAN.TEMP.TRAIN)=c("Monday","Tuesday","Wednesday",                            #DO NOT CHANGE
"Thursday","Friday","Saturday","Sunday")                      #DO NOT CHANGE
for(j in 1:12){    #DO NOT CHANGE
for(k in 1:7){   #DO NOT CHANGE
month <- rownames(MEAN.TEMP.TRAIN)[j]
day <- colnames(MEAN.TEMP.TRAIN)[k]
average_temp <- mean(TRAIN.FINAL$Temperature[TRAIN.FINAL$Month == month & TRAIN.FINAL$Day == day])
MEAN.TEMP.TRAIN[j, k] <- average_temp
}                #DO NOT CHANGE
}                  #DO NOT CHANGE
print(MEAN.TEMP.TRAIN) #DO NOT CHANGE
x=c(35,27,28,40)    #DO NOT CHANGE
range=max(x)-min(x) #DO NOT CHANGE
print(range)
RANGE.func <- function(c) {
range = max(c) - min(c)
return range
RANGE.func <- function(c) {
range = max(c) - min(c)
return(range)
}
try=c(1,2,3,4,5)        #DO NOT CHANGE
print(try)              #DO NOT CHANGE
print(RANGE.func(try))  #DO NOT CHANGE
?apply
RANGE.MONTH.TRAIN <- apply(MEAN.TEMP.TRAIN, 1, RANGE.func)
RANGE.DAY.TRAIN <- apply(MEAN.TEMP.TRAIN, 2, RANGE.func)
print(RANGE.MONTH.TRAIN) #DO NOT CHANGE
print(RANGE.DAY.TRAIN) #DO NOT CHANGE
MEAN.TEMP.TRAIN
x=NULL   #DO NOT CHANGE
x=c(x,3) #DO NOT CHANGE
x=c(x,4) #DO NOT CHANGE
x=c(x,5) #DO NOT CHANGE
print(x) #DO NOT CHANGE
WEEKDAY.HUMIDITY=NULL #DO NOT CHANGE
WEEKEND.HUMIDITY=NULL #DO NOT CHANGE
weekend = c("Saturday", "Sunday")
for(j in 1:1461){   #DO NOT CHANGE
if(TRAIN.FINAL$Day[j] %in% weekend){
WEEKEND.HUMIDITY += TRAIN.FINAL$Humidity[j]
WEEKDAY.HUMIDITY=NULL #DO NOT CHANGE
WEEKEND.HUMIDITY=NULL #DO NOT CHANGE
weekend = c("Saturday", "Sunday")
for(j in 1:1461){   #DO NOT CHANGE
if(TRAIN.FINAL$Day[j] %in% weekend){
WEEKEND.HUMIDITY = TRAIN.FINAL$Humidity[j] + WEEKEND.HUMIDITY
} else {
WEEKDAY.HUMIDITY = TRAIN.FINAL$Humidity[j] +WEEKDAY.HUMIDITY
}
}                   #DO NOT CHANGE
t.test(x=WEEKDAY.HUMIDITY,y=WEEKEND.HUMIDITY) #DO NOT CHANGE
WEEKEND.HUMIDITY
WEEKDAY.HUMIDITY
TRAIN.FINAL$Day[j]
TRAIN.FINAL$Day[j]
for(j in 2:1461){
if(TRAIN.FINAL$Day[j]
TRAIN.FINAL$Day[j]
WEEKDAY.HUMIDITY=NULL #DO NOT CHANGE
WEEKEND.HUMIDITY=NULL #DO NOT CHANGE
weekend = c("Saturday", "Sunday")
for(j in 2:1461){   #DO NOT CHANGE
if(TRAIN.FINAL$Day[j] %in% weekend){
WEEKEND.HUMIDITY = TRAIN.FINAL$Humidity[j] + WEEKEND.HUMIDITY
} else {
WEEKDAY.HUMIDITY = TRAIN.FINAL$Humidity[j] +WEEKDAY.HUMIDITY
}
}                   #DO NOT CHANGE
t.test(x=WEEKDAY.HUMIDITY,y=WEEKEND.HUMIDITY) #DO NOT CHANGE
TRAIN.FINAL$Day[j]
WEEKDAY.HUMIDITY=NULL #DO NOT CHANGE
WEEKEND.HUMIDITY=NULL #DO NOT CHANGE
weekend = c("Saturday", "Sunday")
for(j in 1:1461){   #DO NOT CHANGE
if(TRAIN.FINAL$Day[j] %in% weekend){
WEEKEND.HUMIDITY = TRAIN.FINAL$Humidity[j] + WEEKEND.HUMIDITY
} else {
WEEKDAY.HUMIDITY = TRAIN.FINAL$Humidity[j] +WEEKDAY.HUMIDITY
}
}                   #DO NOT CHANGE
t.test(x=WEEKDAY.HUMIDITY,y=WEEKEND.HUMIDITY) #DO NOT CHANGE
WEEKEND.HUMIDITY
WEEKDAY.HUMIDITY=NULL #DO NOT CHANGE
WEEKEND.HUMIDITY=NULL #DO NOT CHANGE
weekend = c("Saturday", "Sunday")
for(j in 1:1461){   #DO NOT CHANGE
if (TRAIN.FINAL$Day[j] %in% weekend) {
if (is.null(WEEKEND.HUMIDITY)) {
WEEKEND.HUMIDITY <- TRAIN.FINAL$Humidity[j]
} else {
WEEKEND.HUMIDITY <- TRAIN.FINAL$Humidity[j] + WEEKEND.HUMIDITY
}
} else {
if (is.null(WEEKDAY.HUMIDITY)) {
WEEKDAY.HUMIDITY <- TRAIN.FINAL$Humidity[j]
} else {
WEEKDAY.HUMIDITY <- TRAIN.FINAL$Humidity[j] + WEEKDAY.HUMIDITY
}
}
}                   #DO NOT CHANGE
t.test(x=WEEKDAY.HUMIDITY,y=WEEKEND.HUMIDITY) #DO NOT CHANGE
EEKDAY.HUMIDITY
WEEKDAY.HUMIDITY
WEEKEND.HUMIDITY
WEEKDAY.HUMIDITY=NULL #DO NOT CHANGE
WEEKEND.HUMIDITY=NULL #DO NOT CHANGE
weekend = c("Saturday", "Sunday")
for(j in 1:1461){   #DO NOT CHANGE
if (TRAIN.FINAL$Day[j] %in% weekend) {
if (is.null(WEEKEND.HUMIDITY)) {
WEEKEND.HUMIDITY = TRAIN.FINAL$Humidity[j]
} else {
WEEKEND.HUMIDITY = TRAIN.FINAL$Humidity[j] + WEEKEND.HUMIDITY
}
} else {
if (is.null(WEEKDAY.HUMIDITY)) {
WEEKDAY.HUMIDITY = TRAIN.FINAL$Humidity[j]
} else {
WEEKDAY.HUMIDITY = TRAIN.FINAL$Humidity[j] + WEEKDAY.HUMIDITY
}
}
}                   #DO NOT CHANGE
t.test(x=WEEKDAY.HUMIDITY,y=WEEKEND.HUMIDITY) #DO NOT CHANGE
t.test(x=WEEKDAY.HUMIDITY,y=WEEKEND.HUMIDITY)
WEEKDAY.HUMIDITY=NULL #DO NOT CHANGE
WEEKEND.HUMIDITY=NULL #DO NOT CHANGE
weekend = c("Saturday", "Sunday")
for(j in 1:1461){   #DO NOT CHANGE
if (TRAIN.FINAL$Day[j] %in% weekend) {
if (TRAIN.FINAL$Day[j] %in% weekend) {
WEEKEND.HUMIDITY <- append(WEEKEND.HUMIDITY, TRAIN.FINAL$Humidity[j])
} else {
WEEKDAY.HUMIDITY <- append(WEEKDAY.HUMIDITY, TRAIN.FINAL$Humidity[j])
}
}                   #DO NOT CHANGE
t.test(x=WEEKDAY.HUMIDITY,y=WEEKEND.HUMIDITY) #DO NOT CHANGE
WEEKDAY.HUMIDITY=NULL #DO NOT CHANGE
WEEKEND.HUMIDITY=NULL #DO NOT CHANGE
weekend = c("Saturday", "Sunday")
for(j in 1:1461){   #DO NOT CHANGE
if (TRAIN.FINAL$Day[j] %in% weekend) {
WEEKEND.HUMIDITY <- append(WEEKEND.HUMIDITY, TRAIN.FINAL$Humidity[j])
} else {
WEEKDAY.HUMIDITY <- append(WEEKDAY.HUMIDITY, TRAIN.FINAL$Humidity[j])
}
}                   #DO NOT CHANGE
t.test(x=WEEKDAY.HUMIDITY,y=WEEKEND.HUMIDITY) #DO NOT CHANGE
TRAIN.FINAL$`Pressure Percent Change`=NA #DO NOT CHANGE
for (i in 2:nrow(TRAIN.FINAL)) {
current_pressure <- TRAIN.FINAL$Pressure[i]
previous_pressure <- lag(TRAIN.FINAL$Pressure)[i]
percent_change <- (current_pressure - previous_pressure) / previous_pressure
TRAIN.FINAL$`Pressure Percent Change`[i] <- percent_change
}
plot(TRAIN.FINAL$`Pressure Percent Change`,type="l") #DO NOT CHANGE
TRAIN.FINAL$`Pressure Percent Change`
TRAIN.FINAL$`Pressure Percent Change`=NA #DO NOT CHANGE
for (i in 2:nrow(TRAIN.FINAL)) {
pressure_today <- TRAIN.FINAL$Pressure[i]
pressure_yesterday <- lag(TRAIN.FINAL$Pressure)[i]
percent_change <- (pressure_today - pressure_yesterday) / pressure_yesterday
TRAIN.FINAL$`Pressure Percent Change`[i] <- percent_change
}
plot(TRAIN.FINAL$`Pressure Percent Change`,type="l") #DO NOT CHANGE
TRAIN.FINAL$`Pressure 3-Day Average`=NA #DO NOT CHANGE
for (i in 2:(nrow(TRAIN.FINAL) - 1)) {
pressure_today <- TRAIN.FINAL$Pressure[i]
pressure_yesterday <- lag(TRAIN.FINAL$Pressure)[i]
pressure_tomorrow <- lead(TRAIN.FINAL$Pressure)[i]
average_pressure <- (pressure_yesterday + pressure_today + pressure_tomorrow) / 3
TRAIN.FINAL$`Pressure 3-Day Average`[i] <- average_pressure
}
plot(TRAIN.FINAL$`Pressure 3-Day Average`,type="l") #DO NOT CHANGE
