Homeruns = HR,
Salary = salary) %>%
arrange(desc(Salary))
top2   #Do Not Remove
head(airports,5)
delay = flights %>%
group_by(dest) %>%
summarise(avg_arr_delay=mean(arr_delay, na.rm = TRUE),.groups='drop') %>%
inner_join(airports, by = c("dest" = "faa")) %>%
select(everything())
delay #Do Not Remove
delay %>%
ggplot(aes(x = lon, y = lat, color = avg_arr_delay)) +
borders("state") +
geom_point() +
coord_quickmap()
head(planes,5)
plane_ages <-
planes %>%
mutate(age = 2013 - year) %>%
select(tailnum, age)
plane_ages #Do Not Change
flights %>%
inner_join(plane_ages, by = "tailnum") %>%
group_by(age) %>%
summarise(avg_dep_delay = mean(dep_delay, na.rm = TRUE), .groups='drop') %>%
ggplot(aes(x = age, y = avg_dep_delay)) +
geom_point()
flights %>%
filter(is.na(tailnum))
flights %>%
anti_join(planes,by="tailnum") %>%
count(carrier) %>%
arrange(desc(n))
PE=presidentialElections
p1<-ggplot(data=PE) +
geom_point(aes(x=year,y=demVote,color=as.factor(south)),size=2)
p1
p2<-p1+xlab("Year of Election")+ylab("% Democratic")+ggtitle("USA Change in Democratic Vote")
p2
p3<-p2+geom_smooth(aes(x=year,y=demVote,color=as.factor(south)),size=2)
p3
p4<-p3+ guides(color=guide_legend(title="South"))
p4
p5<-p4+ scale_color_manual(values=c("Red","Blue"))
p5
p1<-ggplot(data=PE[PE$year==1932,]) +
geom_density(aes(x=demVote,fill=south))
p1
p1<-ggplot(data=PE[PE$year==1932,]) +
geom_density(aes(x=demVote,fill=south))
p1
p5<-p4+ scale_color_manual(values=c("Blue","Red"))
p5
FINALPLOT2<-p1 + xlab("% Democratic") + ylab("Density") +
scale_color_manual(values=c("Blue","Red")) +
geom_vline(xintercept = 50,alpha=0.8,linetype=4) +
theme_minimal()
FINALPLOT2
FINALPLOT2<-p1 + xlab("% Democratic") + ylab("Density") +
color=as.factor(south)
FINALPLOT2<-p1 + xlab("% Democratic") + ylab("Density") +
mapping = color=as.factor(south)
FINALPLOT2<-p1 + xlab("% Democratic") + ylab("Density") +
scale_color_manual(values=c("Blue","Red")) +
geom_vline(xintercept = 50,alpha=0.8,linetype=4) +
theme_minimal()
FINALPLOT2
# This is a good place to put libraries required for using the ggplot function
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
library(tidyverse)    #Loads the tidyverse suite of packages
# install.packages('Lahman')
library(Lahman)       #Contains the baseball data to use
library(nycflights13) #Contains the 2013 NYC flights data
#install.packages("maps")
library(maps)
library(pscl) #Loads the pscl package for the dataset
library(gridExtra) #Allows us to combine ggplots into a nice layout
top <- Batting %>%
filter(yearID == 2016) %>%
arrange(desc(HR)) %>%
slice(1:10)
top #Do Not Remove
head(People,5)
top1 <- top %>%
left_join(People, by = "playerID") %>%
select(playerID, nameFirst, nameLast, HR)
top1 #Do Not Remove
head(Salaries,5)
top2 <- Salaries %>%
filter(yearID == 2016) %>%
right_join(top1, by = "playerID") %>%
select(FirstName = nameFirst,
LastName = nameLast,
Team = teamID,
Homeruns = HR,
Salary = salary) %>%
arrange(desc(Salary))
top2   #Do Not Remove
head(airports,5)
delay = flights %>%
group_by(dest) %>%
summarise(avg_arr_delay=mean(arr_delay, na.rm = TRUE),.groups='drop') %>%
inner_join(airports, by = c("dest" = "faa")) %>%
select(everything())
delay #Do Not Remove
delay %>%
ggplot(aes(x = lon, y = lat, color = avg_arr_delay)) +
borders("state") +
geom_point() +
coord_quickmap()
head(planes,5)
plane_ages <-
planes %>%
mutate(age = 2013 - year) %>%
select(tailnum, age)
plane_ages #Do Not Change
flights %>%
inner_join(plane_ages, by = "tailnum") %>%
group_by(age) %>%
summarise(avg_dep_delay = mean(dep_delay, na.rm = TRUE), .groups='drop') %>%
ggplot(aes(x = age, y = avg_dep_delay)) +
geom_point()
flights %>%
filter(is.na(tailnum))
flights %>%
anti_join(planes,by="tailnum") %>%
count(carrier) %>%
arrange(desc(n))
PE=presidentialElections
p1<-ggplot(data=PE) +
geom_point(aes(x=year,y=demVote,color=as.factor(south)),size=2)
p1
p2<-p1+xlab("Year of Election")+ylab("% Democratic")+ggtitle("USA Change in Democratic Vote")
p2
p3<-p2+geom_smooth(aes(x=year,y=demVote,color=as.factor(south)),size=2)
p3
p4<-p3+ guides(color=guide_legend(title="South"))
p4
p5<-p4+ scale_color_manual(values=c("Blue","Red"))
p5
p1<-ggplot(data=PE[PE$year==1932,]) +
geom_density(aes(x=demVote,fill=south))
p1
FINALPLOT2<-p1 + xlab("% Democratic") + ylab("Density") +
scale_color_manual(values=c("Blue","Red")) +
geom_vline(xintercept = 50,alpha=0.8,linetype=4) +
theme_minimal()
FINALPLOT2
FINALPLOT2<-p1 + xlab("% Democratic") + ylab("Density") +
scale_color_manual(values=c("Blue","Red")) +
geom_vline(xintercept = 50,alpha=0.8,linetype=4) +
theme_minimal()
FINALPLOT2
FINALPLOT2<-p1 + xlab("% Democratic") + ylab("Density") +
scale_color_manual(values=c("Blue","Red")) +
geom_vline(xintercept = 50,alpha=0.8,linetype=4) +
theme_minimal()
FINALPLOT2
FINALPLOT2<-p1 + xlab("% Democratic") + ylab("Density") +
geom_vline(xintercept = 50,alpha=0.8,linetype=4) +
scale_color_manual(values=c("Blue","Red"))
theme_minimal()
FINALPLOT2
FINALPLOT2<-p1 + xlab("% Democratic") + ylab("Density") +
geom_vline(xintercept = 50,alpha=0.8,linetype=4) +
scale_color_manual(values=c("Blue","Red"))
theme_minimal()
FINALPLOT2
FINALPLOT2<-p1 + xlab("% Democratic") + ylab("Density") +
scale_color_manual(values=c("Blue","Red")) +
geom_vline(xintercept = 50,alpha=0.8,linetype=4) +
theme_minimal()
FINALPLOT2
p6<-p5+geom_vline(xintercept = 1957,alpha=0.8,linetype=4)
p6
FINALPLOT1<- p6 +
theme_minimal()
FINALPLOT1
p1<-ggplot(data=PE[PE$year==1932,]) +
geom_density(aes(x=demVote,fill=south))
p1
FINALPLOT2<-p1 + xlab("% Democratic") + ylab("Density") +
scale_color_manual(values=c("Blue","Red")) +
geom_vline(xintercept = 50,alpha=0.8,linetype=4) +
guides(color=guide_legend(title="South"))
theme_minimal()
FINALPLOT2
FINALPLOT2<-p1 + xlab("% Democratic") + ylab("Density") +
guides(color=guide_legend(title="South")) +
scale_color_manual(values=c("Blue","Red")) +
geom_vline(xintercept = 50,alpha=0.8,linetype=4) +
theme_minimal()
FINALPLOT2
FINALPLOT2<-p1 + xlab("% Democratic") + ylab("Density") +
geom_smooth(aes(x=year,y=demVote,color=as.factor(south)),size=2)
guides(color=guide_legend(title="South")) +
scale_color_manual(values=c("Blue","Red")) +
geom_vline(xintercept = 50,alpha=0.8,linetype=4) +
theme_minimal()
FINALPLOT2
FINALPLOT2<-p1 + xlab("% Democratic") + ylab("Density") +
guides(color=guide_legend(title="South")) +
scale_color_manual(values=c("Blue","Red")) +
geom_vline(xintercept = 50,alpha=0.8,linetype=4) +
theme_minimal()
FINALPLOT2
p1<-ggplot(data=PE[PE$year==1932,]) +
geom_density(aes(x=demVote,fill=south, color =as.factor(south)))
p1
FINALPLOT2<-p1 + xlab("% Democratic") + ylab("Density") +
guides(color=guide_legend(title="South")) +
scale_color_manual(values=c("Blue","Red")) +
geom_vline(xintercept = 50,alpha=0.8,linetype=4) +
theme_minimal()
FINALPLOT2
FINALPLOT2<-p1 + xlab("% Democratic") + ylab("Density") +
guides(color=guide_legend(title="South")) +
scale_color_manual(values=c("Blue","Red")) +
geom_vline(xintercept = 50,alpha=0.8,linetype=4) +
theme_minimal()
FINALPLOT2
p1<-ggplot(data=PE[PE$year==1932,]) +
geom_density(aes(x=demVote,fill=south))
p1
FINALPLOT2<-p1 + xlab("% Democratic") + ylab("Density") +
guides(color=guide_legend(title="South")) +
scale_color_manual(values=c("Blue","Red")) +
geom_vline(xintercept = 50,alpha=0.8,linetype=4) +
theme_minimal()
FINALPLOT2
FINALPLOT2<-p1 + xlab("% Democratic") + ylab("Density") +
guides(color=guide_legend(title="South")) +
scale_color_manual(values=c("Blue","Red")) +
geom_vline(xintercept = 50,alpha=0.8,linetype=4) +
theme_minimal()
FINALPLOT2
FINALPLOT2<-p1 + xlab("% Democratic") + ylab("Density") +
scale_color_manual(values=c("Blue","Red")) +
geom_vline(xintercept = 50,alpha=0.8,linetype=4) +
theme_minimal()
FINALPLOT2
FINALPLOT2<-p1 + xlab("% Democratic") + ylab("Density") +
scale_color_manual(values=c("Blue","Red")) +
geom_vline(xintercept = 50,alpha=0.8,linetype=4) +
theme_minimal()
FINALPLOT2
FINALPLOT2<-p1 + xlab("% Democratic") + ylab("Density") +
scale_color_manual(values=c("Blue","Red")) +
geom_vline(xintercept = 50,alpha=0.8,linetype=4) +
theme_minimal()
FINALPLOT2
FINALPLOT2<-p1 + xlab("% Democratic") + ylab("Density") +
color=as.factor(south) +
scale_color_manual(values=c("Blue","Red")) +
geom_vline(xintercept = 50,alpha=0.8,linetype=4) +
theme_minimal()
FINALPLOT2<-p1 + xlab("% Democratic") + ylab("Density") +
color=as.factor(South) +
scale_color_manual(values=c("Blue","Red")) +
geom_vline(xintercept = 50,alpha=0.8,linetype=4) +
theme_minimal()
FINALPLOT2<-p1 + xlab("% Democratic") + ylab("Density") +
color=as.factor(south) +
scale_color_manual(values=c("Blue","Red")) +
geom_vline(xintercept = 50,alpha=0.8,linetype=4) +
theme_minimal()
FINALPLOT2<-p1 + xlab("% Democratic") + ylab("Density") +
scale_color_manual(values=c("Blue","Red")) +
geom_vline(xintercept = 50,alpha=0.8,linetype=4) +
theme_minimal()
FINALPLOT2
FINALPLOT2<-p1 + xlab("% Democratic") + ylab("Density") +
scale_fill_manual(values=c("Blue","Red")) +
geom_vline(xintercept = 50,alpha=0.8,linetype=4) +
theme_minimal()
FINALPLOT2
p1<-ggplot(data=PE[PE$year==1932,]) +
geom_density(aes(x=demVote,fill=South))
p1
p1<-ggplot(data=PE[PE$year==1932,]) +
geom_density(aes(x=demVote,fill=south))
p1
FINALPLOT2<-p1 + xlab("% Democratic") + ylab("Density") +
scale_fill_manual(values=c("Blue","Red")) +
geom_vline(xintercept = 50,alpha=0.8,linetype=4) +
guides(color=guide_legend(title="South")) +
theme_minimal()
FINALPLOT2
p4<-p3+ guides(color=guide_legend(title="South"))
p4
p5<-p4+ scale_color_manual(values=c("Blue","Red"))
p5
p6<-p5+geom_vline(xintercept = 1957,alpha=0.8,linetype=4)
p6
FINALPLOT2<-p1 + xlab("% Democratic") + ylab("Density") +
scale_fill_manual(values=c("Blue","Red")) +
geom_vline(xintercept = 50,alpha=0.8,linetype=4) +
labs(fill = "South") +
theme_minimal()
FINALPLOT2
p2<-ggplot(data=PE[PE$year==2016,]) +
geom_density(aes(x=demVote,fill=south))
FINALPLOT3<- p2 + xlab("% Democratic") + ylab("Density") +
scale_fill_manual(values=c("Blue","Red")) +
geom_vline(xintercept = 50,alpha=0.8,linetype=4) +
labs(fill = "South") +
theme_minimal()
FINALPLOT3
#First Examine this Code and See What Happens
#Defaults to 1 Column Layout and Stacks Plots
grid.arrange(FINALPLOT1,FINALPLOT2,FINALPLOT3)
#Starts Placing Plots in a Two Column Layout
grid.arrange(FINALPLOT1,FINALPLOT2,FINALPLOT3,ncol=2)
#Now Check this Code Out: Try to Understand how the Matrix is Created and How the Layout is Controlled by the Matrix. Modify It to Get What I created
matrix(c(1,1,2,3),ncol=2)
LAYOUT=matrix(c(1,1,2,3),ncol=2)
grid.arrange(FINALPLOT1,FINALPLOT2,FINALPLOT3,layout_matrix=LAYOUT)
#First Examine this Code and See What Happens
#Defaults to 1 Column Layout and Stacks Plots
grid.arrange(FINALPLOT1,FINALPLOT2,FINALPLOT3)
#Starts Placing Plots in a Two Column Layout
grid.arrange(FINALPLOT1,FINALPLOT2,FINALPLOT3,ncol=2)
#Now Check this Code Out: Try to Understand how the Matrix is Created and How the Layout is Controlled by the Matrix. Modify It to Get What I created
matrix(c(2,1,2,3),ncol=2)
LAYOUT=matrix(c(1,1,2,3),ncol=2)
grid.arrange(FINALPLOT1,FINALPLOT2,FINALPLOT3,layout_matrix=LAYOUT)
#First Examine this Code and See What Happens
#Defaults to 1 Column Layout and Stacks Plots
grid.arrange(FINALPLOT1,FINALPLOT2,FINALPLOT3)
#Starts Placing Plots in a Two Column Layout
grid.arrange(FINALPLOT1,FINALPLOT2,FINALPLOT3,ncol=2)
#Now Check this Code Out: Try to Understand how the Matrix is Created and How the Layout is Controlled by the Matrix. Modify It to Get What I created
matrix(c(1,1,2,3),ncol=2)
LAYOUT=matrix(c(1,1,2,3),ncol=2)
grid.arrange(FINALPLOT1,FINALPLOT2,FINALPLOT3,layout_matrix=LAYOUT)
matrix(c(1,1,2,3),ncol=2)
LAYOUT=matrix(c(1,1,2,3),ncol=2)
matrix(c(1,1,2,3),ncol=2)
#First Examine this Code and See What Happens
#Defaults to 1 Column Layout and Stacks Plots
grid.arrange(FINALPLOT1,FINALPLOT2,FINALPLOT3)
#Starts Placing Plots in a Two Column Layout
grid.arrange(FINALPLOT1,FINALPLOT2,FINALPLOT3,ncol=2)
#Now Check this Code Out: Try to Understand how the Matrix is Created and How the Layout is Controlled by the Matrix. Modify It to Get What I created
matrix(c(1,1,2,3),ncol=2)
LAYOUT=matrix(c(1,2,3),ncol=1)
grid.arrange(FINALPLOT1,FINALPLOT2,FINALPLOT3,layout_matrix=LAYOUT)
matrix(c(1,1,2,3),ncol=2)
#First Examine this Code and See What Happens
#Defaults to 1 Column Layout and Stacks Plots
grid.arrange(FINALPLOT1,FINALPLOT2,FINALPLOT3)
#Starts Placing Plots in a Two Column Layout
grid.arrange(FINALPLOT1,FINALPLOT2,FINALPLOT3,ncol=2)
#Now Check this Code Out: Try to Understand how the Matrix is Created and How the Layout is Controlled by the Matrix. Modify It to Get What I created
matrix(c(1,1,2,3),ncol=2)
LAYOUT=matrix(c(1),ncol=2)
grid.arrange(FINALPLOT1,FINALPLOT2,FINALPLOT3,layout_matrix=LAYOUT)
#First Examine this Code and See What Happens
#Defaults to 1 Column Layout and Stacks Plots
grid.arrange(FINALPLOT1,FINALPLOT2,FINALPLOT3)
#Starts Placing Plots in a Two Column Layout
grid.arrange(FINALPLOT1,FINALPLOT2,FINALPLOT3,ncol=2)
#Now Check this Code Out: Try to Understand how the Matrix is Created and How the Layout is Controlled by the Matrix. Modify It to Get What I created
matrix(c(1,1,2,3),ncol=2)
LAYOUT=matrix(c(1),ncol=1)
grid.arrange(FINALPLOT1,FINALPLOT2,FINALPLOT3,layout_matrix=LAYOUT)
#First Examine this Code and See What Happens
#Defaults to 1 Column Layout and Stacks Plots
grid.arrange(FINALPLOT1,FINALPLOT2,FINALPLOT3)
#Starts Placing Plots in a Two Column Layout
grid.arrange(FINALPLOT1,FINALPLOT2,FINALPLOT3,ncol=2)
#Now Check this Code Out: Try to Understand how the Matrix is Created and How the Layout is Controlled by the Matrix. Modify It to Get What I created
matrix(c(1,1,2,3),ncol=2)
LAYOUT=matrix(c(1,2, 1, 3),ncol=1)
grid.arrange(FINALPLOT1,FINALPLOT2,FINALPLOT3,layout_matrix=LAYOUT)
# This is a good place to put libraries required for using the ggplot function
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
library(tidyverse)    #Loads the tidyverse suite of packages
# install.packages('Lahman')
library(Lahman)       #Contains the baseball data to use
library(nycflights13) #Contains the 2013 NYC flights data
#install.packages("maps")
library(maps)
library(pscl) #Loads the pscl package for the dataset
library(gridExtra) #Allows us to combine ggplots into a nice layout
top <- Batting %>%
filter(yearID == 2016) %>%
arrange(desc(HR)) %>%
slice(1:10)
top #Do Not Remove
head(People,5)
top1 <- top %>%
left_join(People, by = "playerID") %>%
select(playerID, nameFirst, nameLast, HR)
top1 #Do Not Remove
head(Salaries,5)
top2 <- Salaries %>%
filter(yearID == 2016) %>%
right_join(top1, by = "playerID") %>%
select(FirstName = nameFirst,
LastName = nameLast,
Team = teamID,
Homeruns = HR,
Salary = salary) %>%
arrange(desc(Salary))
top2   #Do Not Remove
head(airports,5)
delay = flights %>%
group_by(dest) %>%
summarise(avg_arr_delay=mean(arr_delay, na.rm = TRUE),.groups='drop') %>%
inner_join(airports, by = c("dest" = "faa")) %>%
select(everything())
delay #Do Not Remove
delay %>%
ggplot(aes(x = lon, y = lat, color = avg_arr_delay)) +
borders("state") +
geom_point() +
coord_quickmap()
head(planes,5)
plane_ages <-
planes %>%
mutate(age = 2013 - year) %>%
select(tailnum, age)
plane_ages #Do Not Change
flights %>%
inner_join(plane_ages, by = "tailnum") %>%
group_by(age) %>%
summarise(avg_dep_delay = mean(dep_delay, na.rm = TRUE), .groups='drop') %>%
ggplot(aes(x = age, y = avg_dep_delay)) +
geom_point()
flights %>%
filter(is.na(tailnum))
flights %>%
anti_join(planes,by="tailnum") %>%
count(carrier) %>%
arrange(desc(n))
PE=presidentialElections
p1<-ggplot(data=PE) +
geom_point(aes(x=year,y=demVote,color=as.factor(south)),size=2)
p1
p2<-p1+xlab("Year of Election")+ylab("% Democratic")+ggtitle("USA Change in Democratic Vote")
p2
p3<-p2+geom_smooth(aes(x=year,y=demVote,color=as.factor(south)),size=2)
p3
p4<-p3+ guides(color=guide_legend(title="South"))
p4
p5<-p4+ scale_color_manual(values=c("Blue","Red"))
p5
p1<-ggplot(data=PE[PE$year==1932,]) +
geom_density(aes(x=demVote,fill=south))
p1
FINALPLOT2<-p1 + xlab("% Democratic") + ylab("Density") +
scale_fill_manual(values=c("Blue","Red")) +
geom_vline(xintercept = 50,alpha=0.8,linetype=4) +
labs(fill = "South") +
theme_minimal()
FINALPLOT2
p2<-ggplot(data=PE[PE$year==2016,]) +
geom_density(aes(x=demVote,fill=south))
FINALPLOT3<- p2 + xlab("% Democratic") + ylab("Density") +
scale_fill_manual(values=c("Blue","Red")) +
geom_vline(xintercept = 50,alpha=0.8,linetype=4) +
labs(fill = "South") +
theme_minimal()
FINALPLOT3
#First Examine this Code and See What Happens
#Defaults to 1 Column Layout and Stacks Plots
grid.arrange(FINALPLOT1,FINALPLOT2,FINALPLOT3)
#Starts Placing Plots in a Two Column Layout
grid.arrange(FINALPLOT1,FINALPLOT2,FINALPLOT3,ncol=2)
#Now Check this Code Out: Try to Understand how the Matrix is Created and How the Layout is Controlled by the Matrix. Modify It to Get What I created
matrix(c(1,1,2,3),ncol=2)
LAYOUT=matrix(c(1,2, 1, 3),ncol=1)
grid.arrange(FINALPLOT1,FINALPLOT2,FINALPLOT3,layout_matrix=LAYOUT)
#First Examine this Code and See What Happens
#Defaults to 1 Column Layout and Stacks Plots
grid.arrange(FINALPLOT1,FINALPLOT2,FINALPLOT3)
#Starts Placing Plots in a Two Column Layout
grid.arrange(FINALPLOT1,FINALPLOT2,FINALPLOT3,ncol=2)
#Now Check this Code Out: Try to Understand how the Matrix is Created and How the Layout is Controlled by the Matrix. Modify It to Get What I created
matrix(c(1,1,2,3),ncol=2)
LAYOUT=matrix(c(1,2, 1, 3),ncol=2)
grid.arrange(FINALPLOT1,FINALPLOT2,FINALPLOT3,layout_matrix=LAYOUT)
#First Examine this Code and See What Happens
#Defaults to 1 Column Layout and Stacks Plots
grid.arrange(FINALPLOT1,FINALPLOT2,FINALPLOT3)
#Starts Placing Plots in a Two Column Layout
grid.arrange(FINALPLOT1,FINALPLOT2,FINALPLOT3,ncol=2)
#Now Check this Code Out: Try to Understand how the Matrix is Created and How the Layout is Controlled by the Matrix. Modify It to Get What I created
matrix(c(1,1,2,3),ncol=2)
LAYOUT=matrix(c(1, 2, 1, 3),ncol=2)
grid.arrange(FINALPLOT1,FINALPLOT2,FINALPLOT3,layout_matrix=LAYOUT)
#First Examine this Code and See What Happens
#Defaults to 1 Column Layout and Stacks Plots
grid.arrange(FINALPLOT1,FINALPLOT2,FINALPLOT3)
#Starts Placing Plots in a Two Column Layout
grid.arrange(FINALPLOT1,FINALPLOT2,FINALPLOT3,ncol=2)
#Now Check this Code Out: Try to Understand how the Matrix is Created and How the Layout is Controlled by the Matrix. Modify It to Get What I created
LAYOUT=matrix(c(1, 2, 1, 3),ncol=2)
grid.arrange(FINALPLOT1,FINALPLOT2,FINALPLOT3,layout_matrix=LAYOUT)
#First Examine this Code and See What Happens
#Defaults to 1 Column Layout and Stacks Plots
grid.arrange(FINALPLOT1,FINALPLOT2,FINALPLOT3)
#Starts Placing Plots in a Two Column Layout
grid.arrange(FINALPLOT1,FINALPLOT2,FINALPLOT3,ncol=2)
#Now Check this Code Out: Try to Understand how the Matrix is Created and How the Layout is Controlled by the Matrix. Modify It to Get What I created
matrix(c(1,1,2,3),ncol=2)
LAYOUT=matrix(c(1, 2, 1, 3),ncol=2)
grid.arrange(FINALPLOT1,FINALPLOT2,FINALPLOT3,layout_matrix=LAYOUT)
